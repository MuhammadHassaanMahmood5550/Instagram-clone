{"version":3,"sources":["firebase.js","Post.js","ImageUpload.js","App.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","storage","Post","username","caption","imageurl","postId","user","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","docs","map","data","className","Avatar","alt","src","cur","text","type","placeholder","value","onChange","e","target","onClick","event","preventDefault","add","timestamp","FieldValue","serverTimestamp","displayName","ImageUpload","setCaption","image","setImage","progress","setProgress","max","files","Button","ref","name","put","on","snapshot","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","React","modalStyle","posts","setPosts","open","setOpen","setUsername","password","setPassword","email","setEmail","setUser","openSignIn","setOpenSignIn","onAuthStateChanged","authUser","id","post","Modal","onClose","style","Input","createUserWithEmailAndPassword","updateProfile","catch","signInWithEmailAndPassword","signOut","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21fca61a.chunk.js","sourcesContent":["\r\n//   export default db;\r\n\r\nimport firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyA1sWdwJcBEGJCqBoXyigym1sZN1PbaQvs\",\r\n  authDomain: \"instagram-clone-bea5a.firebaseapp.com\",\r\n  projectId: \"instagram-clone-bea5a\",\r\n  storageBucket: \"instagram-clone-bea5a.appspot.com\",\r\n  messagingSenderId: \"512623048154\",\r\n  appId: \"1:512623048154:web:24df52a13883e74f287ce3\"  \r\n  \r\n});\r\n\r\n\r\n/*1. to access db\r\n2. to do authentication\r\n3. to upload pictures etc*/\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebaseApp.auth();\r\nconst storage = firebaseApp.storage();\r\n\r\nexport {db, auth, storage};\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport './post.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { db } from './firebase';\r\nimport firebase from \"firebase\";\r\n\r\n\r\n\r\n//rfce\r\nfunction Post({username, caption, imageurl, postId, user}) {\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState('');\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if(postId){\r\n    unsubscribe = db.collection(\"posts\").doc(postId).collection(\"comments\").orderBy('timestamp', 'desc').onSnapshot((onSnapshot) => {\r\n    setComments(onSnapshot.docs.map((doc) => \r\n    doc.data()\r\n    ));\r\n });\r\n        }\r\n\r\n        return () => {\r\n            unsubscribe();\r\n        };\r\n    }, [postId]);\r\n\r\n    //to submit comment to that post\r\n    const postComment = (event) => {\r\n        event.preventDefault();\r\n        db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n           text: comment,\r\n           username: user.displayName\r\n        });\r\n        setComment('');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"post-header\">\r\n          <div className=\"post_avatar\">\r\n\r\n          <Avatar alt={username} src=\"/static/images/avatar/1.jpg\" />\r\n          </div>\r\n           \r\n            <h3>{username}</h3>\r\n           \r\n            </div>       \r\n          \r\n            <img className=\"post-image\" src={imageurl} alt=\"\" />\r\n           \r\n            <h4 className=\"post-text\">\r\n               <strong>{username}: </strong>{caption}</h4>\r\n               <p className=\"post-commentHeading\">Comments:</p>\r\n\r\n               \r\n  {/* //at firebase inside collection comments we have text and username */}  \r\n            <div className=\"post_comments\">\r\n            {\r\n                comments.map((cur) => (              \r\n                    <p className=\"post_nameandText\">\r\n    <strong>{cur.username}</strong> {cur.text}\r\n                    </p>\r\n                ))\r\n            }\r\n            </div>\r\n               \r\n\r\n            {user &&    <form className=\"post_commentBox\">\r\n              <input  \r\n               className=\"post_input\"\r\n               type=\"text\"\r\n               placeholder=\"Add a comment...\"\r\n               value={comment}\r\n               onChange={(e) => setComment(e.target.value)}\r\n               />\r\n               \r\n                   <button\r\n                   className=\"post_button\"\r\n                   type=\"submit\"\r\n                   onClick={postComment}\r\n                   >Post</button>\r\n               </form>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","//rfce\r\nimport { Button } from '@material-ui/core'\r\nimport React, { useState } from 'react'\r\nimport {storage, db} from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport './ImageUpload.css';\r\n\r\nfunction ImageUpload({username}) {\r\n      {/*1. caption input\r\n      2. file picker\r\n      3. post button */}\r\n    const [caption, setCaption] = useState('');\r\n    const [image, setImage] = useState(null);\r\n    const [progress, setProgress] = useState(0);\r\n    const handleChange = (e) => {\r\n        //if we picked two files so it takes only one\r\n        if(e.target.files[0]){\r\n            setImage(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleUpload = () => {\r\n       const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n       uploadTask.on(\r\n           \"state_changed\",\r\n           (snapshot) => {\r\n               //progress logic\r\n               const progress = Math.round(\r\n                  (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n               );\r\n               setProgress(progress);\r\n           },\r\n           (error) => {\r\n               console.log(error);\r\n               alert(error.message);\r\n           },\r\n           () => {\r\n               //getDownloadURL() to get from firebase\r\n              storage\r\n              .ref(\"images\")\r\n              .child(image.name)\r\n              .getDownloadURL()\r\n              .then(url => {\r\n                  //post image inside db\r\n                  db.collection(\"posts\").add({\r\n                      //with serverTimestamp there will a consistent time may be in london someone upload at morning 3:00 so in pakistan later someone upload at morning 3:00.\r\n                      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                      caption: caption,\r\n                      imageurl: url,\r\n                      username: username\r\n                      //above is download url\r\n                  });\r\n                  setImage(null);\r\n                  setProgress(0);\r\n                  setCaption(\"\");    \r\n              }); \r\n              //this above tell that go and get the download link fron firebase\r\n           }\r\n       );\r\n    };\r\n    return (\r\n        <div className=\"imageupload\" >       \r\n      <progress className=\"image_progress\" value={progress} max=\"100\"/>\r\n      <input className=\"imageupload_caption\" type=\"text\" placeholder='Eneter a caption...'\r\n      value={caption} \r\n      onChange={(e) => setCaption(e.target.value)} />\r\n      <input type=\"file\" onChange={handleChange} />      \r\n      <Button className=\"imageupload_btn\"  onClick={handleUpload}>Upload</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","import React from 'react';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport Post from './Post';\nimport {db, auth} from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input } from '@material-ui/core';\nimport ImageUpload from './ImageUpload';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nfunction App() {\n  \n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  //above consts are of material ui\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [user, setUser] = useState(null); \n  const [openSignIn, setOpenSignIn] = useState(false); \n\n\n  //------------2. this is the listner for authentication \n  useEffect(() => {\n   //// 2. this will listen for every single time if any any change happen on authentication \n   //// this above means if you login or logout it will run \n  const unsubscribe = auth.onAuthStateChanged((authUser) => {\n     if (authUser){\n    console.log(authUser);\n    setUser(authUser);\n\n     }else{\n       //user has log out\n      setUser(null);\n     }\n   })\n\n   //for example new user log in and he change his name so bcz of dependencies [user, username] it fires again the whole useEffect but with return below it deteched the old one.\n   //we did this thing bcz useEffect and onAuthStateChanged both fires according to their dependencies\n   return () => {\n     //perform some cleanup action\n     unsubscribe();\n   }\n  }, [user, username]);\n\n  //[] only run when page loads\n  // if not [] then each time things randers\n  useEffect(() => {\n    ////normal way of reading\n    // db.collection('posts').onSnapshot(snapshot => {\n    //   setPosts(snapshot.docs.map(doc => doc.data()));\n    // })\n    ////another way to get individual ids\n    //this timestamp is to manage time the post can be on same time.\ndb.collection('posts').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    })\n\n  },[]);\n\n  //-----------1. to create new user with pass and email for authentication\n  const signUp = (event) => {\n   event.preventDefault();\n   //1. create user and catch him\n   auth.createUserWithEmailAndPassword(email, password)\n   .then((authUser) => {\n    return authUser.user.updateProfile({\n       displayName: username\n     })\n   })\n   .catch((error) => alert(error.message));\n  }\n\n  const signIn = (event) => {\n    event.preventDefault();\n    auth.signInWithEmailAndPassword(email, password)\n    .catch((error) => alert(error.message));\n    //to close model\n    setOpenSignIn(false);\n  }\n\n\n  return (\n    <div className=\"App\">\n    \n<Modal\n  open={open}\n  onClose={() => setOpen(false)} \n>\n<div style={modalStyle} className={classes.paper}>\n     <form className=\"app_signup\" >\n      <center>\n      <img \n        src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"\" className=\"form-image\" />\n\n      <Input\n        placeholder=\"username\"\n        type=\"text\"\n        value={username}\n        onChange={(e) => setUsername(e.target.value)}\n        ></Input>\n\n        <Input\n        placeholder=\"email\"\n        type=\"text\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        ></Input>\n\n       <Input\n        placeholder=\"password\"\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        ></Input>\n\n        <Button type=\"submit\" onClick={signUp}>sign Up</Button>\n      </center>\n      </form>\n    </div>\n</Modal>\n\n\n\n<Modal\n  open={openSignIn}\n  onClose={() => setOpenSignIn(false)} \n>\n<div style={modalStyle} className={classes.paper}>\n     <form className=\"app_signup\" >\n      <center>\n      <img \n        src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"\" className=\"form-image\" />\n\n        <Input\n        placeholder=\"email\"\n        type=\"text\"\n        value={email}\n        onChange={(e) => setEmail(e.target.value)}\n        ></Input>\n\n       <Input\n        placeholder=\"password\"\n        type=\"password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n        ></Input>\n\n        <Button type=\"submit\" onClick={signIn}>sign In</Button>\n      </center>\n      </form>\n    </div>\n</Modal>\n     \n\n      <div className=\"app-header\">\n        <img \n        src=\"https://www.instagram.com/static/images/web/mobile_nav_type_logo.png/735145cfe0a4.png\" alt=\"\" className=\"app-header-image\" />\n      \n      {\n     //----------just auth.signout() to sign out\n     user ? <Button onClick={() => auth.signOut()} >Logout</Button> \n     :\n     <div className=\"app_loginContainer\">\n       <Button onClick={() => setOpenSignIn(true)} >Sign In</Button>\n       <Button onClick={() => setOpen(true)} >Sign Up</Button>\n     </div>\n    \n   }\n      \n      \n      </div>\n\n      <div className=\"app__post\">\n\n        <div className=\"app_first\">\n\n      {\nuser?.displayName ? (\n  <p></p> \n): (<h3>Sorry you need to login to upload posts and to add comments.</h3>\n)\n}\n</div>\n\n      {\n        //when we did not had key simple way\n        // posts.map( cur => (\n        //   <Post username={cur.username} caption={cur.caption} imageurl={cur.imageurl}></Post>\n        // ))\n\n        //another way by destructuring with key\n        posts.map(({id, post}) => (\n          //bcz of this id only particular element of that id will be load not all elements in map\n          <Post key={id} username={post.username} caption={post.caption} imageurl={post.imageurl} postId={id} user={user}></Post>\n        ))\n      }\n      </div>\n \n\n\n\n  {/* //working on firebase storage to store image and post on firebase */}\n   {/* //user? measin this is optional    */}\n\n   {\nuser?.displayName ? (\n<ImageUpload username={user.displayName} /> \n): (<h3>Sorry you need to login to upload posts and to add comments.</h3>\n)}\n      \n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}